{{- $fullname := include "paperless-ngx.fullname" . }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $fullname }}-paperless-configmap
  labels:
    {{- include "paperless-ngx.labels" . | nindent 4 }}
    app.kubernetes.io/component: paperless
data:
  PAPERLESS_URL: "https://{{ .Values.ingress.endpoint }}"
  # Audit Log settings
  {{- with .Values.config.auditLog }}
  {{- if not (kindIs "invalid" .enabled) }}
  PAPERLESS_AUDIT_LOG_ENABLED: "{{ .enabled }}"
  {{- end }}
  {{- end }}
  # Authentication (built-in) settings
  {{- with .Values.config.authentication.builtin }}
  {{- if not (kindIs "invalid" .allowSignups) }}
  PAPERLESS_ACCOUNT_ALLOW_SIGNUPS: "{{ .allowSignups }}"
  {{- end }}
  {{- if not (kindIs "invalid" .defaultGroups) }}
  PAPERLESS_ACCOUNT_DEFAULT_GROUPS: "{{ .defaultGroups }}"
  {{- end }}
  {{- end }}
  # Authentication (session) settings
  {{- with .Values.config.authentication.session }}
  {{- if not (kindIs "invalid" .cookieAge) }}
  PAPERLESS_ACCOUNT_SESSION_COOKIE_AGE: "{{ .cookieAge }}"
  {{- end }}
  {{- if not (kindIs "invalid" .remember) }}
  PAPERLESS_ACCOUNT_SESSION_REMEMBER: "{{ .remember }}"
  {{- end }}
  {{- end }}
  # Authentication (SSO) settings
  {{- with .Values.config.authentication.sso }}
  {{- if not (kindIs "invalid" .disableRegularLogin) }}
  PAPERLESS_DISABLE_REGULAR_LOGIN: "{{ .disableRegularLogin }}"
  {{- end }}
  {{- if not (kindIs "invalid" .redirectLogin) }}
  PAPERLESS_REDIRECT_LOGIN_TO_SSO: "{{ .redirectLogin }}"
  {{- end }}
  {{- if not (kindIs "invalid" .accountSyncGroups) }}
  PAPERLESS_SOCIAL_ACCOUNT_SYNC_GROUPS: "{{ .accountSyncGroups }}"
  {{- end }}
  {{- if not (kindIs "invalid" .allowSignups) }}
  PAPERLESS_SOCIAL_ALLOW_SIGNUPS: "{{ .allowSignups }}"
  {{- end }}
  {{- if not (kindIs "invalid" .autoSignup) }}
  PAPERLESS_SOCIAL_AUTO_SIGNUP: "{{ .autoSignup }}"
  {{- end }}
  {{- if not (kindIs "invalid" .defaultGroups) }}
  PAPERLESS_SOCIAL_ACCOUNT_DEFAULT_GROUPS: "{{ .defaultGroups }}"
  {{- end }}
  {{- if not (kindIs "invalid" .providers) }}
  PAPERLESS_SOCIALACCOUNT_PROVIDERS: "{{ .providers }}"
  {{- end }}
  {{- end }}
  # Authentication (email) settings
  {{- with .Values.config.authentication.email }}
  {{- if not (kindIs "invalid" .signupVerification) }}
  PAPERLESS_ACCOUNT_EMAIL_VERIFICATION: "{{ .signupVerification }}"
  {{- end }}
  {{- if not (kindIs "invalid" .unknownAccounts) }}
  PAPERLESS_ACCOUNT_EMAIL_UNKNOWN_ACCOUNTS: "{{ .unknownAccounts }}"
  {{- end }}
  {{- end }}
  # Barcode settings
  {{- with .Values.config.barcode }}
  {{- if not (kindIs "invalid" .asnBarcodePrefix) }}
  PAPERLESS_CONSUMER_ASN_BARCODE_PREFIX: "{{ .asnBarcodePrefix }}"
  {{- end }}
  {{- if not (kindIs "invalid" .barcodeDpi) }}
  PAPERLESS_CONSUMER_BARCODE_DPI: "{{ .barcodeDpi }}"
  {{- end }}
  {{- if not (kindIs "invalid" .barcodeString) }}
  PAPERLESS_CONSUMER_BARCODE_STRING: "{{ .barcodeString }}"
  {{- end }}
  {{- if not (kindIs "invalid" .barcodeUpscale) }}
  PAPERLESS_CONSUMER_BARCODE_UPSCALE: "{{ .barcodeUpscale }}"
  {{- end }}
  {{- if not (kindIs "invalid" .enableAsnBarcode) }}
  PAPERLESS_CONSUMER_ENABLE_ASN_BARCODE: "{{ .enableAsnBarcode }}"
  {{- end }}
  {{- if not (kindIs "invalid" .enableTagBarcode) }}
  PAPERLESS_CONSUMER_ENABLE_TAG_BARCODE: "{{ .enableTagBarcode }}"
  {{- end }}
  {{- if not (kindIs "invalid" .enabled) }}
  PAPERLESS_CONSUMER_ENABLE_BARCODES: "{{ .enabled }}"
  {{- end }}
  {{- if not (kindIs "invalid" .maxPages) }}
  PAPERLESS_CONSUMER_BARCODE_MAX_PAGES: "{{ .maxPages }}"
  {{- end }}
  {{- if not (kindIs "invalid" .retainSplitPages) }}
  PAPERLESS_CONSUMER_BARCODE_RETAIN_SPLIT_PAGES: "{{ .retainSplitPages }}"
  {{- end }}
  {{- if not (kindIs "invalid" .tagBarcodeMapping) }}
  PAPERLESS_CONSUMER_TAG_BARCODE_MAPPING: "{{ .tagBarcodeMapping }}"
  {{- end }}
  {{- if not (kindIs "invalid" .tiffSupport) }}
  PAPERLESS_CONSUMER_BARCODE_TIFF_SUPPORT: "{{ .tiffSupport }}"
  {{- end }}
  {{- end }}
  # Collation (double-sided) settings
  {{- with .Values.config.collation.doubleSided }}
  {{- if not (kindIs "invalid" .enabled) }}
  PAPERLESS_CONSUMER_ENABLE_COLLATE_DOUBLE_SIDED: "{{ .enabled }}"
  {{- end }}
  {{- if not (kindIs "invalid" .subdirName) }}
  PAPERLESS_CONSUMER_COLLATE_DOUBLE_SIDED_SUBDIR_NAME: "{{ .subdirName }}"
  {{- end }}
  {{- if not (kindIs "invalid" .tiffSupport) }}
  PAPERLESS_CONSUMER_COLLATE_DOUBLE_SIDED_TIFF_SUPPORT: "{{ .tiffSupport }}"
  {{- end }}
  {{- end }}
  # Container (webServer) settings
  {{- with .Values.config.container.webServer }}
  {{- if not (kindIs "invalid" .workers) }}
  PAPERLESS_WEBSERVER_WORKERS: "{{ .workers }}"
  {{- end }}
  {{- end }}
  # Container (usermap) settings
  {{- with .Values.config.container.userMap }}
  {{- if not (kindIs "invalid" .gid) }}
  USERMAP_GID: "{{ .gid }}"
  {{- end }}
  {{- if not (kindIs "invalid" .uid) }}
  USERMAP_UID: "{{ .uid }}"
  {{- end }}
  {{- end }}
  # Document Consumption settings
  {{- with .Values.config.documentConsumption }}
  {{- if not (kindIs "invalid" .barcodeScanner) }}
  PAPERLESS_CONSUMER_BARCODE_SCANNER: "{{ .barcodeScanner }}"
  {{- end }}
  {{- if not (kindIs "invalid" .consumerDisable) }}
  PAPERLESS_CONSUMER_DISABLE: "{{ .consumerDisable }}"
  {{- end }}
  {{- if not (kindIs "invalid" .dateOrder) }}
  PAPERLESS_DATE_ORDER: "{{ .dateOrder }}"
  {{- end }}
  {{- if not (kindIs "invalid" .deleteDuplicates) }}
  PAPERLESS_CONSUMER_DELETE_DUPLICATES: "{{ .deleteDuplicates }}"
  {{- end }}
  {{- if not (kindIs "invalid" .enableGpgDecryptor) }}
  PAPERLESS_ENABLE_GPG_DECRYPTOR: "{{ .enableGpgDecryptor }}"
  {{- end }}
  {{- if not (kindIs "invalid" .filenameDateOrder) }}
  PAPERLESS_FILENAME_DATE_ORDER: "{{ .filenameDateOrder }}"
  {{- end }}
  {{- if not (kindIs "invalid" .ignoreDates) }}
  PAPERLESS_IGNORE_DATES: "{{ .ignoreDates }}"
  {{- end }}
  {{- if not (kindIs "invalid" .ignorePatterns) }}
  PAPERLESS_CONSUMER_IGNORE_PATTERNS: "{{ .ignorePatterns }}"
  {{- end }}
  {{- if not (kindIs "invalid" .numSuggestedDates) }}
  PAPERLESS_NUMBER_OF_SUGGESTED_DATES: "{{ .numSuggestedDates }}"
  {{- end }}
  {{- if not (kindIs "invalid" .recursive) }}
  PAPERLESS_CONSUMER_RECURSIVE: "{{ .recursive }}"
  {{- end }}
  {{- if not (kindIs "invalid" .subdirsAsTags) }}
  PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "{{ .subdirsAsTags }}"
  {{- end }}
  {{- if not (kindIs "invalid" .postConsumeScript) }}
  PAPERLESS_POST_CONSUME_SCRIPT: "{{ .postConsumeScript }}"
  {{- end }}
  {{- if not (kindIs "invalid" .preConsumeScript) }}
  PAPERLESS_PRE_CONSUME_SCRIPT: "{{ .preConsumeScript }}"
  {{- end }}
  {{- end }}
  # Document Consumption (iNotify) settings
  {{- with .Values.config.documentConsumption.iNotify }}
  {{- if not (kindIs "invalid" .delay) }}
  PAPERLESS_CONSUMER_INOTIFY_DELAY: "{{ .delay }}"
  {{- end }}
  {{- end }}
  # Document Consumption (polling) settings
  {{- with .Values.config.documentConsumption.polling }}
  {{- if not (kindIs "invalid" .delay) }}
  PAPERLESS_CONSUMER_POLLING_DELAY: "{{ .delay }}"
  {{- end }}
  {{- if not (kindIs "invalid" .interval) }}
  PAPERLESS_CONSUMER_POLLING: "{{ .interval }}"
  {{- end }}
  {{- if not (kindIs "invalid" .retryCount) }}
  PAPERLESS_CONSUMER_POLLING_RETRY_COUNT: "{{ .retryCount }}"
  {{- end }}
  {{- end }}
  # Email settings
  {{- with .Values.config.email }}
  {{- if not (kindIs "invalid" .from) }}
  PAPERLESS_EMAIL_FROM: "{{ .from }}"
  {{- end }}
  {{- if not (kindIs "invalid" .host) }}
  PAPERLESS_EMAIL_HOST: "{{ .host }}"
  {{- end }}
  {{- if not (kindIs "invalid" .password) }}
  PAPERLESS_EMAIL_HOST_PASSWORD: "{{ .password }}"
  {{- end }}
  {{- if not (kindIs "invalid" .port) }}
  PAPERLESS_EMAIL_PORT: "{{ .port }}"
  {{- end }}
  {{- if not (kindIs "invalid" .user) }}
  PAPERLESS_EMAIL_HOST_USER: "{{ .user }}"
  {{- end }}
  {{- if not (kindIs "invalid" .useSsl) }}
  PAPERLESS_EMAIL_USE_SSL: "{{ .useSsl }}"
  {{- end }}
  {{- if not (kindIs "invalid" .useTls) }}
  PAPERLESS_EMAIL_USE_TLS: "{{ .useTls }}"
  {{- end }}
  {{- end }}
  # Filename settings
  {{- with .Values.config.filenames }}
  {{- if not (kindIs "invalid" .format) }}
  PAPERLESS_FILENAME_FORMAT: "{{ .format }}"
  {{- end }}
  {{- if not (kindIs "invalid" .formatRemoveNone) }}
  PAPERLESS_FILENAME_FORMAT_REMOVE_NONE: "{{ .formatRemoveNone }}"
  {{- end }}
  {{- end }}
  # Front-end settings
  {{- with .Values.config.container.frontEnd }}
  {{- if not (kindIs "invalid" .title) }}
  PAPERLESS_APP_TITLE: "{{ .title }}"
  {{- end }}
  {{- if not (kindIs "invalid" .logo) }}
  PAPERLESS_APP_LOGO: "{{ .logo }}"
  {{- end }}
  {{- end }}
  # Hosting settings
  {{- with .Values.config.hosting }}
  {{- if not (kindIs "invalid" .useXForwardHost) }}
  PAPERLESS_USE_X_FORWARD_HOST: "{{ .useXForwardHost }}"
  {{- end }}
  {{- if not (kindIs "invalid" .useXForwardPort) }}
  PAPERLESS_USE_X_FORWARD_PORT: "{{ .useXForwardPort }}"
  {{- end }}
  {{- end }}
  # Incoming mail (OAuth) settings
  {{- with .Values.config.incomingMail.oAuth }}
  {{- if not (kindIs "invalid" .callbackBaseUrl) }}
  PAPERLESS_OAUTH_CALLBACK_BASE_URL: "{{ .callbackBaseUrl }}"
  {{- end }}
  {{- if not (kindIs "invalid" .gMailOAuthClientId) }}
  PAPERLESS_GMAIL_OAUTH_CLIENT_ID: "{{ .gMailOAuthClientId }}"
  {{- end }}
  {{- if not (kindIs "invalid" .gMailOAuthClientSecret) }}
  PAPERLESS_GMAIL_OAUTH_CLIENT_SECRET: "{{ .gMailOAuthClientSecret }}"
  {{- end }}
  {{- if not (kindIs "invalid" .outlookOAuthClientId) }}
  PAPERLESS_OUTLOOK_OAUTH_CLIENT_ID: "{{ .outlookOAuthClientId }}"
  {{- end }}
  {{- if not (kindIs "invalid" .outlookOAuthClientSecret) }}
  PAPERLESS_OUTLOOK_OAUTH_CLIENT_SECRET: "{{ .outlookOAuthClientSecret }}"
  {{- end }}
  {{- end }}
  # OCR settings
  {{- with .Values.config.ocr }}
  {{- if not (kindIs "invalid" .clean) }}
  PAPERLESS_OCR_CLEAN: "{{ .clean }}"
  {{- end }}
  {{- if not (kindIs "invalid" .colorConversionStrategy) }}
  PAPERLESS_OCR_COLOR_CONVERSION_STRATEGY: "{{ .colorConversionStrategy }}"
  {{- end }}
  {{- if not (kindIs "invalid" .deskew) }}
  PAPERLESS_OCR_DESKEW: "{{ .deskew }}"
  {{- end }}
  {{- if not (kindIs "invalid" .imageDpi) }}
  PAPERLESS_OCR_IMAGE_DPI: "{{ .imageDpi }}"
  {{- end }}
  {{- if not (kindIs "invalid" .language) }}
  PAPERLESS_OCR_LANGUAGE: "{{ .language }}"
  {{- end }}
  {{- if not (kindIs "invalid" .maxImagePixels) }}
  PAPERLESS_OCR_MAX_IMAGE_PIXELS: "{{ .maxImagePixels }}"
  {{- end }}
  {{- if not (kindIs "invalid" .mode) }}
  PAPERLESS_OCR_MODE: "{{ .mode }}"
  {{- end }}
  {{- if not (kindIs "invalid" .outputType) }}
  PAPERLESS_OCR_OUTPUT_TYPE: "{{ .outputType }}"
  {{- end }}
  {{- if not (kindIs "invalid" .pages) }}
  PAPERLESS_OCR_PAGES: "{{ .pages }}"
  {{- end }}
  {{- if not (kindIs "invalid" .rotatePages) }}
  PAPERLESS_OCR_ROTATE_PAGES: "{{ .rotatePages }}"
  {{- end }}
  {{- if not (kindIs "invalid" .rotatePagesThreshold) }}
  PAPERLESS_OCR_ROTATE_PAGES_THRESHOLD: "{{ .rotatePagesThreshold }}"
  {{- end }}
  {{- if not (kindIs "invalid" .skipArchiveFile) }}
  PAPERLESS_OCR_SKIP_ARCHIVE_FILE: {{ .skipArchiveFile }}
  {{- end }}
  {{- end }}
  # Trash settings
  {{- with .Values.config.trash }}
  {{- if not (kindIs "invalid" .emptyDelay) }}
  PAPERLESS_EMPTY_TRASH_DELAY: "{{ .emptyDelay }}"
  {{- end }}
  {{- if not (kindIs "invalid" .emptyTask) }}
  PAPERLESS_EMPTY_TRASH_TASK_CRON: "{{ .emptyTask }}"
  {{- end }}
  {{- end }}
  # Tweaks settings
  {{- with .Values.config.tweaks }}
  {{- if not (kindIs "invalid" .apps) }}
  PAPERLESS_APPS: "{{ .apps }}"
  {{- end }}
  {{- if not (kindIs "invalid" .convertMemoryLimit) }}
  PAPERLESS_CONVERT_MEMORY_LIMIT: "{{ .convertMemoryLimit }}"
  {{- end }}
  {{- if not (kindIs "invalid" .maxImagePixels) }}
  PAPERLESS_MAX_IMAGE_PIXELS: "{{ .maxImagePixels }}"
  {{- end }}
  {{- if not (kindIs "invalid" .taskWorkers) }}
  PAPERLESS_TASK_WORKERS: "{{ .taskWorkers }}"
  {{- end }}
  {{- if not (kindIs "invalid" .threadsPerWorker) }}
  PAPERLESS_THREADS_PER_WORKER: "{{ .threadsPerWorker }}"
  {{- end }}
  {{- if not (kindIs "invalid" .timeZone) }}
  PAPERLESS_TIME_ZONE: "{{ .timeZone }}"
  {{- end }}
  {{- if not (kindIs "invalid" .workerTimeout) }}
  PAPERLESS_WORKER_TIMEOUT: "{{ .workerTimeout }}"
  {{- end }}
  {{- end }}
  # Tweaks (cron) settings
  {{- with .Values.config.tweaks.cron }}
  {{- if not (kindIs "invalid" .emailTask) }}
  PAPERLESS_EMAIL_TASK_CRON: "{{ .emailTask }}"
  {{- end }}
  {{- if not (kindIs "invalid" .indexTask) }}
  PAPERLESS_INDEX_TASK_CRON: "{{ .indexTask }}"
  {{- end }}
  {{- if not (kindIs "invalid" .trainTask) }}
  PAPERLESS_TRAIN_TASK_CRON: "{{ .trainTask }}"
  {{- end }}
  {{- if not (kindIs "invalid" .sanityTask) }}
  PAPERLESS_SANITY_TASK_CRON: "{{ .sanityTask }}"
  {{- end }}
  {{- end }}
